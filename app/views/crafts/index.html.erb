<!-- <style>
  /* Always set the map height explicitly to define the size of the div
   * element that contains the map. */
  #map {
    height: 70%;
  }
  /* Optional: Makes the sample page fill the window. */
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
</style>

<body> -->

	<div class="container-fluid" >

		<h2 class="text-center">All Workshops</h2>

		<div class="row mt-3">
			<% @crafts.order("date DESC").each do |craft| %>
				<div class="col-12 col-sm-12 col-md-12 col-lg-4 mt-2 mb-4">
					<div class="card shadow-lg" style="border: none;">
						<div class="card-body text-center">
							<p class="card-text"><small class="text-muted"><%= craft.date.strftime("%d/%m/%Y") %> â€¢ <%= craft.start_time %> to <%= craft.end_time %></small></p>
							<h5 class="card-title"><a class="text-dark effect-shine text-uppercase" style="text-decoration: none;" href="/crafts/<%= craft.id %>">
								<strong><%= craft.title %></a></strong>
								<% if craft.availability == false %>
									<img src="https://www.thedoggurus.com/wp-content/uploads/2016/05/UhOh-png-web.png" style="height: 21px; width: 40px;">
								<% end %>
							</h5>
							<p class="card-text"><small class="text-muted text-uppercase"><%= craft.craft_type %></small></p>
						</div>
						<img class="card-img-top" src="https://acpknighttimes.com/wp-content/uploads/2017/08/Art.jpg" alt="Card image cap">
						<div class="card-body text-center">
							<i class="fa fa-map-marker" aria-hidden="true"></i>
							<p class="card-text"><small class="text-muted text-uppercase">LOCATION: <%= craft.city %></small></p>
							<p class="card-text" style="font-family: cursive;"><i><%= truncate(craft.description, length: 100) %></i></p>
							<p class="card-text"><small class="text-muted"><strong><%= link_to "MORE DETAILS", craft_path(craft), class:"text-dark effect-shine", style:"text-decoration: none;" %></strong></small></p>
						</div>
					</div>
				</div>
			<% end %>
		</div>

	</div>

<!-- 	<div id="map"></div>
	    
    <script>
      var map, infoWindow;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 8,
          center: {lat: 3.480262, lng: 102.020161}, 
        });
        infoWindow = new google.maps.InfoWindow;

        // Create a <script> tag and set the USGS URL as the source.
        var script = document.createElement('script');
        // This example uses a local copy of the GeoJSON stored at
        // http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojsonp
        script.src = 'https://developers.google.com/maps/documentation/javascript/examples/json/earthquake_GeoJSONP.js';
        document.getElementsByTagName('head')[0].appendChild(script);
      }

        // HTML5 geolocation -> gives user's current location
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            console.log(pos)

            infoWindow.setPosition(pos);
            infoWindow.setContent('You are here!');
            infoWindow.open(map);
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      	}	
  

      // Loop through the results array and place a marker for each
      // set of coordinates.
      window.eqfeed_callback = function(results) {
        for (var i = 0; i < results.features.length; i++) {
          var coords = results.features[i].geometry.coordinates;
          var latLng = new google.maps.LatLng(coords[1],coords[0]);
          var marker = new google.maps.Marker({
            position: latLng,
            map: map
          });
        }
      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['YOUR_API_KEY'] %>&callback=initMap">
    </script>
</body> -->
